<!DOCTYPE html>
<html lang="en">

<head>
    <title>Editar incidencia</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
</head>

<body>
    <nav class="navbar navbar-expand-lg fixed-top navbar-dark bg-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">
                <svg class="bi me-2" width="40" height="32" role="img" style="fill: orange;">
                    <use xlink:href="#icon" />
                </svg>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"
                aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul id="navbar" class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Inicio</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/ui/incidents">Incidencias</a>
                    </li>
                    <li id="mis-incidencias" class="nav-item">
                        <a class="nav-link" href="/ui/incidents/my-incidents">Mis incidencias</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/ui/incidents/inaccessible-accessibility-features">Medidas de
                            Accesibilidad</a>
                    </li>
                    <li id="cargar-csv" class="nav-item">
                        <a class="nav-link" href="/ui/incidents/upload_csv">Cargar</a>
                    </li>
                </ul>
                <form id="auth" class="d-flex">
                    <a type="button" href="/ui/incidents/login" class="btn me-2 btn-outline-light">Ingresar</a>
                    <a type="button" href="/ui/incidents/register-user" class="btn me-2 btn-warning">Registrarse</a>
                </form>
            </div>
        </div>
    </nav>

    <div class="container mt-3">
        <div class="row justify-content-between pt-5">
            <div class="col-10 pt-3">
                <h2>Editar estado de incidencia {{incident.id}} (estado actual: {{incident.getState}})</h2>
            </div>
            <div class="col-2 pt-3">
                <a class="btn btn-outline-primary float-right" href="/ui/incidents">Volver</a>
            </div>

            <form id="form">
                <div class="form-floating mt-3 mb-3">
                    <select class="form-select" id="estado" name="estado">
                        <option value="Seleccionar estado" disabled selected>Seleccionar estado</option>
                        <option value="Asignado">Asignado</option>
                        <option value="Confirmado">Confirmado</option>
                        <option value="Desestimado">Desestimado</option>
                        <option value="EnProgreso">EnProgreso</option>
                        <option value="Resuelto">Resuelto</option>
                    </select>
                    <label for="estado">Estado</label>
                </div>

                <div class="form-floating mt-3 mb-3" id="campo-empleado" style="display: none;">
                    <input type="text" class="form-control" id="empleado" placeholder="Empleado" name="empleado">
                    <label for="empleado">Empleado</label>
                </div>

                <div class="form-floating mt-3 mb-3" id="campo-motivo" style="display: none;">
                    <input type="text" class="form-control" id="motivo" placeholder="Motivo de rechazo" name="motivo">
                    <label for="motivo">Motivo de rechazo</label>
                </div>

                <button type="submit" class="btn btn-primary">Finalizar</button>
            </form>
        </div>
    </div>
</body>
<script>

    const selectEstado = document.querySelector('select[name="estado"]');
    const campoEmpleado = document.getElementById('campo-empleado');
    const campoMotivo = document.getElementById('campo-motivo');
    const form = document.getElementById('form');

    selectEstado.addEventListener('change', function () {
        const estadoSeleccionado = selectEstado.value;

        campoEmpleado.style.display = 'none';
        campoMotivo.style.display = 'none';

        if (estadoSeleccionado === 'Asignado') {
            campoEmpleado.style.display = 'block';
        } else if (estadoSeleccionado === 'Desestimado') {
            campoMotivo.style.display = 'block';
        }

        if (estadoSeleccionado !== 'EnProgreso') {
            document.querySelector('input[name="empleado"]').value = '';
            document.querySelector('input[name="motivo"]').value = '';
        }
    });
</script>

<script type="module" src="/user.js"></script>
<script type="module">
  import { getToken, setUser } from '/user.js';
  setUser();

  const estadoMapping = {
    Asignado: "assigned",
    Reportado: "reported",
    Confirmado: "confirmed",
    EnProgreso: "inProgress",
    Desestimado: "dismissed",
    Resuelto: "resolved"
  };

  form.onsubmit = async (e) => {
    e.preventDefault();
    const form = document.querySelector("#form");

    const estadoSeleccionado = selectEstado.value;

    const id = {{incident.id}};
    let stateUrl = `/api/incidents/${id}/state`;
    let estadoData = {
      employee: form.querySelector('input[name="empleado"]').value,
      rejectedReason: form.querySelector('input[name="motivo"]').value
    };

    switch (estadoSeleccionado) {
      case 'Asignado':
        stateUrl = `/api/incidents/${id}/assign-employee`;
        delete estadoData.rejectedReason;
        break;
      case 'Confirmado':
        stateUrl = `/api/incidents/${id}/confirm`;
        delete estadoData.employee;
        delete estadoData.rejectedReason;
        break;
      case 'EnProgreso':
        stateUrl = `/api/incidents/${id}/start-progress`;
        delete estadoData.employee;
        delete estadoData.rejectedReason;
        break;
      case 'Resuelto':
        stateUrl = `/api/incidents/${id}/resolve`;
        delete estadoData.employee;
        delete estadoData.rejectedReason;
        break;
      case 'Desestimado':
        stateUrl = `/api/incidents/${id}/dismiss`;
        delete estadoData.employee;
        break;
      default:
        break;
    }

    if (estadoSeleccionado !== 'Seleccionar estado') {
      const responseEstado = await fetch(stateUrl, {
        method: 'POST',
        headers: {
          'token': getToken(),
          },
        body: JSON.stringify(estadoData),
      });

      const responseDataEstado = await responseEstado.json();
      if (responseDataEstado.status === 422 || responseDataEstado.status === 400 || responseDataEstado.status === 403) {
        alert(responseDataEstado.message);
      } else if (responseEstado.status === 200) {
        alert("Cambio de estado realizado con Ã©xito");
        window.location.href = `/ui/incidents/${id}`;
      }
    }
  };
</script>


</html>